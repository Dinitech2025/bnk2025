const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function addTestAddresses() {
  try {
    console.log('üè† Ajout d\'adresses de test...')

    // Trouver l'utilisateur DINY Oili
    const user = await prisma.user.findFirst({
      where: {
        OR: [
          { email: 'dinyoili@outlook.com' },
          { phone: '+261325550444' },
          { firstName: 'DINY' }
        ]
      }
    })

    if (!user) {
      console.log('‚ùå Utilisateur DINY Oili non trouv√©')
      return
    }

    console.log('üë§ Utilisateur trouv√©:', user.firstName, user.lastName, user.email)

    // V√©rifier les adresses existantes
    const existingAddresses = await prisma.address.findMany({
      where: { userId: user.id }
    })

    console.log('üìç Adresses existantes:', existingAddresses.length)

    if (existingAddresses.length === 0) {
      // Cr√©er des adresses de test
      const billingAddress = await prisma.address.create({
        data: {
          userId: user.id,
          type: 'BILLING',
          street: '123 Rue Principale',
          city: 'Antananarivo',
          state: 'Analamanga',
          zipCode: '101',
          country: 'Madagascar',
          isDefault: true,
          phoneNumber: '+261325550444'
        }
      })

      const shippingAddress = await prisma.address.create({
        data: {
          userId: user.id,
          type: 'SHIPPING',
          street: '456 Avenue de l\'Ind√©pendance',
          city: 'Antananarivo',
          state: 'Analamanga',
          zipCode: '101',
          country: 'Madagascar',
          isDefault: true,
          phoneNumber: '+261325550444'
        }
      })

      console.log('‚úÖ Adresse de facturation cr√©√©e:', billingAddress.id)
      console.log('‚úÖ Adresse de livraison cr√©√©e:', shippingAddress.id)

      // Ajouter une adresse secondaire
      const secondaryAddress = await prisma.address.create({
        data: {
          userId: user.id,
          type: 'BILLING',
          street: '789 Boulevard Ratsimilaho',
          city: 'Fianarantsoa',
          state: 'Haute Matsiatra',
          zipCode: '301',
          country: 'Madagascar',
          isDefault: false,
          phoneNumber: '+261325550444'
        }
      })

      console.log('‚úÖ Adresse secondaire cr√©√©e:', secondaryAddress.id)

    } else {
      console.log('üìç L\'utilisateur a d√©j√† des adresses:')
      existingAddresses.forEach(addr => {
        console.log(`  - ${addr.type}: ${addr.street}, ${addr.city} (d√©faut: ${addr.isDefault})`)
      })
    }

    // Afficher toutes les adresses finales
    const finalAddresses = await prisma.address.findMany({
      where: { userId: user.id },
      orderBy: { isDefault: 'desc' }
    })

    console.log('\nüìä Adresses finales pour cet utilisateur:')
    finalAddresses.forEach(addr => {
      console.log(`  ${addr.type}: ${addr.street}, ${addr.city}, ${addr.zipCode} - ${addr.country}`)
      console.log(`    Par d√©faut: ${addr.isDefault ? 'Oui' : 'Non'}`)
    })

  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addTestAddresses()
