const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkSettings() {
  try {
    console.log('V√©rification des param√®tres dans la base de donn√©es...\n')
    
    const settings = await prisma.setting.findMany({
      orderBy: {
        key: 'asc'
      }
    })

    if (settings.length === 0) {
      console.log('‚ùå Aucun param√®tre trouv√© dans la base de donn√©es')
      return
    }

    console.log(`‚úÖ ${settings.length} param√®tres trouv√©s:\n`)
    
    // Afficher tous les param√®tres
    settings.forEach(setting => {
      console.log(`üìù ${setting.key}: "${setting.value || 'NULL'}"`)
    })

    // V√©rifier sp√©cifiquement les param√®tres de logo
    console.log('\nüîç Param√®tres de logo sp√©cifiques:')
    const logoSettings = settings.filter(s => 
      s.key.includes('logo') || s.key.includes('Logo') || s.key === 'useSiteLogo'
    )
    
    if (logoSettings.length === 0) {
      console.log('‚ùå Aucun param√®tre de logo trouv√©')
    } else {
      logoSettings.forEach(setting => {
        console.log(`üñºÔ∏è  ${setting.key}: "${setting.value || 'NULL'}"`)
      })
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification des param√®tres:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkSettings() 
 
 
 