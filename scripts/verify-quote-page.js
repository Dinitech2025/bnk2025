const fs = require('fs')
const path = require('path')

console.log('üîç V√©rification de la page de devis...\n')

const pagePath = path.join(__dirname, '..', 'app', '(admin)', 'admin', 'quotes', '[id]', 'page.tsx')
const oldPagePath = path.join(__dirname, '..', 'app', '(admin)', 'admin', 'quotes', '[id]', 'page-old.tsx')

try {
  // V√©rifier que le nouveau fichier existe
  if (!fs.existsSync(pagePath)) {
    console.log('‚ùå Le fichier page.tsx n\'existe pas!')
    process.exit(1)
  }
  console.log('‚úÖ Le fichier page.tsx existe')

  // Lire le contenu
  const content = fs.readFileSync(pagePath, 'utf8')

  // V√©rifications
  const checks = [
    {
      name: 'Import UnifiedQuoteMessages',
      test: content.includes('UnifiedQuoteMessages'),
      expected: true
    },
    {
      name: 'Fonction AdminQuoteDetailPage',
      test: content.includes('export default function AdminQuoteDetailPage()'),
      expected: true
    },
    {
      name: 'Utilisation du composant unifi√©',
      test: content.includes('<UnifiedQuoteMessages'),
      expected: true
    },
    {
      name: 'Pas de QuoteMessage (ancien syst√®me)',
      test: !content.includes('quoteMessage.create'),
      expected: true
    },
    {
      name: 'Taille du fichier (< 500 lignes)',
      test: content.split('\n').length < 500,
      expected: true
    }
  ]

  console.log('\nüìã V√©rifications:')
  let allPassed = true

  checks.forEach(check => {
    const status = check.test === check.expected ? '‚úÖ' : '‚ùå'
    console.log(`${status} ${check.name}`)
    if (check.test !== check.expected) {
      allPassed = false
    }
  })

  // Statistiques
  const lines = content.split('\n').length
  console.log(`\nüìä Statistiques:`)
  console.log(`   Lignes: ${lines}`)
  console.log(`   Taille: ${(content.length / 1024).toFixed(2)} KB`)

  // V√©rifier l'ancien fichier
  if (fs.existsSync(oldPagePath)) {
    console.log(`\n‚ö†Ô∏è L'ancien fichier page-old.tsx existe toujours`)
    console.log(`   Vous pouvez le supprimer apr√®s v√©rification`)
  }

  if (allPassed) {
    console.log('\n‚úÖ TOUT EST CORRECT!')
    console.log('üéâ La nouvelle page unifi√©e est en place')
    console.log('\nüí° Prochaines √©tapes:')
    console.log('   1. Videz le cache du navigateur (Ctrl+Shift+R)')
    console.log('   2. Rechargez la page /admin/quotes/[id]')
    console.log('   3. Vous devriez voir la nouvelle interface moderne')
  } else {
    console.log('\n‚ùå Des probl√®mes ont √©t√© d√©tect√©s')
    console.log('V√©rifiez le fichier page.tsx')
  }

} catch (error) {
  console.error('‚ùå Erreur:', error.message)
  process.exit(1)
}

