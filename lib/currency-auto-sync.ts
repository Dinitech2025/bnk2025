import { syncExchangeRates, shouldUpdateRates } from './currency-service'

let syncInterval: NodeJS.Timeout | null = null

/**
 * D√©marre la synchronisation automatique des taux de change toutes les 5 heures
 */
export function startAutoSync() {
  // √âviter de cr√©er plusieurs intervalles
  if (syncInterval) {
    clearInterval(syncInterval)
  }
  
  // R√©duire les logs pendant le build pour √©viter le spam
  const isBuildTime = process.env.NEXT_PHASE === 'phase-production-build'
  if (!isBuildTime) {
    console.log('üîÑ D√©marrage de la synchronisation automatique des taux de change (toutes les 5 heures)')
  }
  
  // Synchronisation imm√©diate si n√©cessaire
  syncIfNeeded()
  
  // Synchronisation toutes les 5 heures (5 * 60 * 60 * 1000 ms)
  syncInterval = setInterval(async () => {
    await syncIfNeeded()
  }, 5 * 60 * 60 * 1000)
}

/**
 * Arr√™te la synchronisation automatique
 */
export function stopAutoSync() {
  if (syncInterval) {
    clearInterval(syncInterval)
    syncInterval = null
    console.log('‚èπÔ∏è Synchronisation automatique des taux de change arr√™t√©e')
  }
}

/**
 * Synchronise les taux de change si n√©cessaire
 */
async function syncIfNeeded() {
  try {
    const needsUpdate = await shouldUpdateRates()
    const isBuildTime = process.env.NEXT_PHASE === 'phase-production-build'
    
    if (needsUpdate) {
      if (!isBuildTime) console.log('üîÑ Synchronisation des taux de change en cours...')
      const success = await syncExchangeRates(false)
      
      if (success) {
        if (!isBuildTime) console.log('‚úÖ Taux de change synchronis√©s avec succ√®s')
      } else {
        if (!isBuildTime) console.log('‚ùå √âchec de la synchronisation des taux de change')
      }
    } else {
      // Ne log qu'une fois pendant le build pour √©viter le spam
      if (!isBuildTime) {
        console.log('‚ÑπÔ∏è Taux de change √† jour, synchronisation ignor√©e')
      }
    }
  } catch (error) {
    console.error('‚ùå Erreur lors de la synchronisation automatique:', error)
  }
}

/**
 * Force une synchronisation imm√©diate
 */
export async function forceSyncNow(): Promise<boolean> {
  console.log('üîÑ Synchronisation forc√©e des taux de change...')
  try {
    const success = await syncExchangeRates(true)
    if (success) {
      console.log('‚úÖ Synchronisation forc√©e r√©ussie')
    } else {
      console.log('‚ùå √âchec de la synchronisation forc√©e')
    }
    return success
  } catch (error) {
    console.error('‚ùå Erreur lors de la synchronisation forc√©e:', error)
    return false
  }
} 